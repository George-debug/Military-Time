{"ast":null,"code":"var _jsxFileName = \"/home/george/time/src/apps/militaryTime/components/Bg.jsx\";\nimport React, { useState } from 'react';\nimport { useTransition, useSpring, animated } from 'react-spring';\nimport { bg, configA, stars, suns } from './Props.jsx';\nexport default function Bg(props) {\n  const [DN, setDN] = useState(props.DN);\n  const [ss, setss] = useState(!!props.DN ? suns : stars);\n\n  if (DN !== props.DN) {\n    setss(!!props.DN ? suns : stars);\n    setDN(props.DN);\n  }\n\n  const bgStyle = useSpring({\n    background: bg[DN],\n    config: configA\n  });\n  const transitions = useTransition(ss, s => s.key, {\n    config: configA,\n    from: {\n      opacity: 0\n    },\n    enter: s => [{\n      opacity: s.opacity\n    }],\n    leave: {\n      opacity: 0\n    },\n    trail: 20\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(`BG`, `BG-DN ${DN}`, `BG-SS ${ss[0].class}`), /*#__PURE__*/React.createElement(animated.div, {\n    style: bgStyle,\n    className: \"bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), transitions.map(({\n    item,\n    props,\n    key\n  }) => /*#__PURE__*/React.createElement(animated.div, {\n    style: props,\n    key: key,\n    className: item.class,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 54\n    }\n  })));\n}","map":{"version":3,"sources":["/home/george/time/src/apps/militaryTime/components/Bg.jsx"],"names":["React","useState","useTransition","useSpring","animated","bg","configA","stars","suns","Bg","props","DN","setDN","ss","setss","bgStyle","background","config","transitions","s","key","from","opacity","enter","leave","trail","console","log","class","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,cAAjD;AACA,SAAQC,EAAR,EAAYC,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B,QAAuC,aAAvC;AAEA,eAAe,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAE9B,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAACS,KAAK,CAACC,EAAP,CAA5B;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAE,CAAC,CAACS,KAAK,CAACC,EAAT,GAAeH,IAAf,GAAsBD,KAAvB,CAA5B;;AAEA,MAAGI,EAAE,KAAKD,KAAK,CAACC,EAAhB,EAAmB;AACfG,IAAAA,KAAK,CAAE,CAAC,CAACJ,KAAK,CAACC,EAAT,GAAeH,IAAf,GAAsBD,KAAvB,CAAL;AACAK,IAAAA,KAAK,CAACF,KAAK,CAACC,EAAP,CAAL;AACH;;AAED,QAAMI,OAAO,GAAGZ,SAAS,CAAC;AACtBa,IAAAA,UAAU,EAAEX,EAAE,CAACM,EAAD,CADQ;AAEtBM,IAAAA,MAAM,EAAEX;AAFc,GAAD,CAAzB;AAIA,QAAMY,WAAW,GAAGhB,aAAa,CAACW,EAAD,EAAKM,CAAC,IAAIA,CAAC,CAACC,GAAZ,EAAiB;AAC9CH,IAAAA,MAAM,EAAEX,OADsC;AAE9Ce,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFwC;AAG9CC,IAAAA,KAAK,EAAEJ,CAAC,IAAI,CAAC;AAAEG,MAAAA,OAAO,EAAEH,CAAC,CAACG;AAAb,KAAD,CAHkC;AAI9CE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAJuC;AAK9CG,IAAAA,KAAK,EAAE;AALuC,GAAjB,CAAjC;AAQA,sBACI,0CACKC,OAAO,CAACC,GAAR,CAAa,IAAb,EAAmB,SAAQhB,EAAG,EAA9B,EAAkC,SAAQE,EAAE,CAAC,CAAD,CAAF,CAAMe,KAAM,EAAtD,CADL,eAEI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEb,OAArB;AAA8B,IAAA,SAAS,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKG,WAAW,CAACW,GAAZ,CAAgB,CAAC;AAACC,IAAAA,IAAD;AAAOpB,IAAAA,KAAP;AAAcU,IAAAA;AAAd,GAAD,kBAAwB,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEV,KAArB;AAA4B,IAAA,GAAG,EAAEU,GAAjC;AAAsC,IAAA,SAAS,EAAIU,IAAI,CAACF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CAHL,CADJ;AAOH","sourcesContent":["import React, {useState} from 'react'\nimport {useTransition, useSpring, animated} from 'react-spring'\nimport {bg, configA, stars, suns} from './Props.jsx'\n\nexport default function Bg(props) {\n\n    const [DN, setDN] = useState(props.DN)\n    const [ss, setss] = useState((!!props.DN) ? suns : stars)\n\n    if(DN !== props.DN){\n        setss((!!props.DN) ? suns : stars)\n        setDN(props.DN)\n    }\n\n    const bgStyle = useSpring({\n        background: bg[DN],\n        config: configA})\n\n    const transitions = useTransition(ss, s => s.key, {\n        config: configA,\n        from: { opacity: 0 },\n        enter: s => [{ opacity: s.opacity }],\n        leave: { opacity: 0 },\n        trail: 20\n    })\n\n    return (\n        <>\n            {console.log(`BG`, `BG-DN ${DN}`, `BG-SS ${ss[0].class}`)}\n            <animated.div style={bgStyle} className=\"bg\"></animated.div>\n            {transitions.map(({item, props, key}) => <animated.div style={props} key={key} className = {item.class}></animated.div>)}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}