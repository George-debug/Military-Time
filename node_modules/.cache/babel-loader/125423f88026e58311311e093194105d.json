{"ast":null,"code":"var _jsxFileName = \"/home/george/time/src/apps/militaryTime/components/Bg.jsx\";\nimport React, { useState } from 'react';\nimport { useTransition, useSpring, animated } from 'react-spring';\nexport default function Bg(props) {\n  const bgStyle = useSpring({\n    background: props.bg\n  });\n  const stars = [{\n    class: 'stars-sm',\n    opacity: 1,\n    key: 0\n  }, {\n    class: 'stars-m',\n    opacity: 1,\n    key: 1\n  }, {\n    class: 'stars-l',\n    opacity: 1,\n    key: 2\n  }];\n  const suns = [{\n    class: 'sun-sm',\n    opacity: 1,\n    key: 3\n  }, {\n    class: 'sun-m',\n    opacity: 0.6,\n    key: 4\n  }, {\n    class: 'sun-l',\n    opacity: 0.3,\n    key: 5\n  }];\n  const [DN, setDN] = useState(props.DN);\n  const [ss, setss] = useState(!!DN ? suns : stars);\n\n  if (props.DN !== DN) {\n    setDN(props.DN);\n    setss(!!DN ? suns : stars);\n  }\n\n  const transitions = useTransition(ss, s => s.key, {\n    from: {\n      opacity: 0\n    },\n    enter: s => [{\n      opacity: s.opacity\n    }],\n    leave: {\n      opacity: 0\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(animated.div, {\n    style: bgStyle,\n    className: \"bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), transitions.map(({\n    item,\n    props,\n    key\n  }) => console.log(key)));\n}","map":{"version":3,"sources":["/home/george/time/src/apps/militaryTime/components/Bg.jsx"],"names":["React","useState","useTransition","useSpring","animated","Bg","props","bgStyle","background","bg","stars","class","opacity","key","suns","DN","setDN","ss","setss","transitions","s","from","enter","leave","map","item","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,cAAjD;AAEA,eAAe,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAE9B,QAAMC,OAAO,GAAGJ,SAAS,CAAC;AAACK,IAAAA,UAAU,EAAEF,KAAK,CAACG;AAAnB,GAAD,CAAzB;AAEA,QAAMC,KAAK,GAAG,CACV;AACIC,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,OAAO,EAAE,CAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADU,EAMV;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,OAAO,EAAE,CAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GANU,EAWV;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,OAAO,EAAE,CAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAXU,CAAd;AAkBA,QAAMC,IAAI,GAAG,CACT;AACIH,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,OAAO,EAAE,CAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADS,EAMT;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,OAAO,EAAE,GAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GANS,EAWT;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,OAAO,EAAE,GAFb;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAXS,CAAb;AAkBA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAACK,KAAK,CAACS,EAAP,CAA5B;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAE,CAAC,CAACc,EAAH,GAASD,IAAT,GAAgBJ,KAAjB,CAA5B;;AAEA,MAAGJ,KAAK,CAACS,EAAN,KAAaA,EAAhB,EAAmB;AACfC,IAAAA,KAAK,CAACV,KAAK,CAACS,EAAP,CAAL;AACAG,IAAAA,KAAK,CAAE,CAAC,CAACH,EAAH,GAASD,IAAT,GAAgBJ,KAAjB,CAAL;AACH;;AAED,QAAMS,WAAW,GAAGjB,aAAa,CAACe,EAAD,EAAKG,CAAC,IAAIA,CAAC,CAACP,GAAZ,EAAiB;AAC9CQ,IAAAA,IAAI,EAAE;AAAET,MAAAA,OAAO,EAAE;AAAX,KADwC;AAE9CU,IAAAA,KAAK,EAAEF,CAAC,IAAI,CAAC;AAAER,MAAAA,OAAO,EAAEQ,CAAC,CAACR;AAAb,KAAD,CAFkC;AAG9CW,IAAAA,KAAK,EAAE;AAAEX,MAAAA,OAAO,EAAE;AAAX;AAHuC,GAAjB,CAAjC;AAMA,sBACI,uDACI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEL,OAArB;AAA8B,IAAA,SAAS,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKY,WAAW,CAACK,GAAZ,CAAgB,CAAC;AAACC,IAAAA,IAAD;AAAOnB,IAAAA,KAAP;AAAcO,IAAAA;AAAd,GAAD,KAAwBa,OAAO,CAACC,GAAR,CAAYd,GAAZ,CAAxC,CAFL,CADJ;AAMH","sourcesContent":["import React, {useState} from 'react'\nimport {useTransition, useSpring, animated} from 'react-spring'\n\nexport default function Bg(props) {\n\n    const bgStyle = useSpring({background: props.bg})\n\n    const stars = [\n        {\n            class: 'stars-sm',\n            opacity: 1,\n            key: 0\n        },\n        {\n            class: 'stars-m',\n            opacity: 1,\n            key: 1\n        },\n        {\n            class: 'stars-l',\n            opacity: 1,\n            key: 2\n        }\n    ]\n\n    const suns = [\n        {\n            class: 'sun-sm',\n            opacity: 1,\n            key: 3\n        },\n        {\n            class: 'sun-m',\n            opacity: 0.6,\n            key: 4\n        },\n        {\n            class: 'sun-l',\n            opacity: 0.3,\n            key: 5\n        }\n    ]\n\n    const [DN, setDN] = useState(props.DN) \n    const [ss, setss] = useState((!!DN) ? suns : stars)\n\n    if(props.DN !== DN){\n        setDN(props.DN)\n        setss((!!DN) ? suns : stars)\n    }\n\n    const transitions = useTransition(ss, s => s.key, {\n        from: { opacity: 0 },\n        enter: s => [{ opacity: s.opacity }],\n        leave: { opacity: 0 },\n    })\n\n    return (\n        <>\n            <animated.div style={bgStyle} className=\"bg\"></animated.div>\n            {transitions.map(({item, props, key}) => console.log(key))}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}